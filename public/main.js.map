{"version":3,"sources":["./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/environments/environment.ts","./src/app/components/list/list.component.ts","./src/app/components/list/list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/items.service.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/message-confirm/message-confirm.component.ts","./src/app/components/message-confirm/message-confirm.component.html","./src/app/mat/mat.module.ts","./src/app/app-routing.module.ts","./src/app/components/form-edit/form-edit.component.ts","./src/app/components/form-edit/form-edit.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n    <mat-sidenav #drawer class=\"sidenav\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\" [mode]=\"(isHandset$ | async) ? 'over' : 'side'\" [opened]=\"(isHandset$ | async) === false\">\n        <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n        <mat-nav-list>\n            <a mat-list-item href=\"#\">Link 1</a>\n            <a mat-list-item href=\"#\">Link 2</a>\n            <a mat-list-item href=\"#\">Link 3</a>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-toolbar color=\"primary\">\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n            <span>Dashboard</span>\n        </mat-toolbar>\n        <!-- Add Content Here -->\n        <ng-content select=\"selector\">\n\n        </ng-content>\n    </mat-sidenav-content>\n</mat-sidenav-container>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyCAjUhbhahPCUfScf5HRvElpBByHD-e2DU\",\n    authDomain: \"inventory-95173.firebaseapp.com\",\n    projectId: \"inventory-95173\",\n    storageBucket: \"inventory-95173.appspot.com\",\n    messagingSenderId: \"1035937217142\",\n    appId: \"1:1035937217142:web:971fe8c3adc07612843d57\",\n    measurementId: \"G-1TP2BNE20V\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ItemsService } from 'src/app/services/items.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { FormEditComponent } from '../form-edit/form-edit.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MessageConfirmComponent } from '../message-confirm/message-confirm.component';\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'amount', 'price', 'actions', 'new'];\n  dataSource = new MatTableDataSource();\n  //PAGINATOR\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private customerService: ItemsService, private dialog: MatDialog, public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.customerService.getAllItems().subscribe(res => this.dataSource.data = res);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  //METODO EDIT\n  onEdit(element) {\n    this.reset();\n    this.openDialog();\n    if (element) {\n      this.customerService.selected = element;\n    }\n\n  }\n  //METODO DELETE\n  onDelete(id: any) {\n    //this.customerService.deleteItem(id);\n    const dialogRef = this.dialog.open(MessageConfirmComponent, {\n      width: '350px',\n      data: { mensaje: 'are you sure to delete this item?' }\n    }); dialogRef.afterClosed().subscribe(result => {\n      if (result === 'aceptar') {\n        this.customerService.deleteItem(id);\n        this.customerService.getAllItems();\n        this.snackBar.open('Item deleted successfully', '', {\n          duration: 3000\n        })\n      }\n    });\n  }\n\n  openDialog(): void {\n    const dialogConf = new MatDialogConfig();\n    dialogConf.data = {\n      title: 'modal'\n    };\n    dialogConf.autoFocus = true;\n    this.dialog.open(FormEditComponent, dialogConf)\n  }\n\n  reset(): void {\n    this.customerService.selected.name = '';\n    this.customerService.selected.amount = 0;\n    this.customerService.selected.price = 0;\n    this.customerService.selected.id = null;\n  }\n\n}\n","<mat-form-field appearance=\"standard\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n</mat-form-field>\n<div class=\"container\">\n\n\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" matSort>\n        <ng-container matColumnDef=\"new\">\n            <th mat-header-cell *matHeaderCellDef>\n                <button mat-flat-button color=\"accent\" (click)=\"onEdit()\">\n                <mat-icon>add_circle_outline\n                </mat-icon>\n            </button>\n            </th>\n            <td mat-cell *matCellDef=\"let element\"></td>\n        </ng-container>\n        <!-- Position Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Item's name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"amount\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.amount}} </td>\n        </ng-container>\n\n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"price\">\n            <th mat-header-cell *matHeaderCellDef> Price </th>\n            <td mat-cell *matCellDef=\"let element\"> ${{element.price}} </td>\n        </ng-container>\n\n\n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"actions\">\n            <th mat-header-cell *matHeaderCellDef> Actions </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-flat-button color=\"primary\" (click)=\"onEdit(element)\">\n                <mat-icon>edit</mat-icon>\n            </button>&nbsp;\n                <button mat-flat-button color=\"warn\" (click)=\"onDelete(element.id)\">\n                <mat-icon>delete</mat-icon>\n            </button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\n        </tr>\n    </table>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crud';\n}\n","<app-main-nav></app-main-nav>\n<app-list>\n\n</app-list>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { ListComponent } from './components/list/list.component';\nimport { MatModule } from '../app/mat/mat.module'\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ItemsService } from './services/items.service';\n//firebase\nimport { environment } from 'src/environments/environment';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FormEditComponent } from './components/form-edit/form-edit.component';\nimport { FormsModule } from '@angular/forms';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MessageConfirmComponent } from './components/message-confirm/message-confirm.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    NavbarComponent,\n    FormEditComponent,\n    MainNavComponent,\n    MessageConfirmComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    MatModule,\n    AngularFirestoreModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    MatFormFieldModule,\n    FormsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule\n\n\n  ],\n  providers: [ItemsService],\n  bootstrap: [AppComponent],\n  entryComponents: [FormEditComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore'\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CustomerI } from '../models/items';\n\nexport interface CustomerID extends CustomerI { id: string; }\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsService {\n  //PROPIEDADES\n  private itemsCollection: AngularFirestoreCollection<CustomerI>;\n  customers: Observable<CustomerID[]>;\n  public selected = {\n    id: null,\n    name: '',\n    amount: 0,\n    price: 0,\n  };\n\n\n  constructor(private readonly afs: AngularFirestore) {\n    //<======================= CONSULTA A LA BASE DE DATOS TODA LA INFORMACION ALMACENADA EN LA COLLECION \"INVENTORY\"\n    this.itemsCollection = afs.collection<CustomerI>('inventory ')\n    this.customers = this.itemsCollection.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as CustomerI;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    ) // ============================> \n  }\n\n  //<--======= TRAE TODA LA INFORMACION DE LA BASE DE DATOS Y LA MUESTRA EN LA TABLA=========---->\n  getAllItems() {\n    return this.customers;\n  }\n\n  //<================= EDITAR ========================>\n  editItems(customer: CustomerID) {\n    console.log(customer)\n    return this.itemsCollection.doc(customer.id).update(customer);\n  }\n  //<============== DELETE =======>\n  deleteItem(id: string) {\n    return this.itemsCollection.doc(id).delete();\n  }\n  //ADD\n  add(customer: CustomerI) {\n    return this.itemsCollection.add(customer)\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>CRUD FIREBASE</span>\n    <span class=\"example-spacer\"></span>\n</mat-toolbar>","\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-message-confirm',\n  templateUrl: './message-confirm.component.html',\n  styleUrls: ['./message-confirm.component.css']\n})\nexport class MessageConfirmComponent implements OnInit {\n  mensaje: string;\n  btn = 'aceptar';\n\n  constructor(public dialogRef: MatDialogRef<MessageConfirmComponent>, @Inject(MAT_DIALOG_DATA) public data: any) {\n    this.mensaje = data.mensaje;\n  }\n\n  ngOnInit(): void {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>Confirmation Message </h1>\n<div mat-dialog-content>\n    <p>{{mensaje}}</p>\n</div>\n<div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">No</button>\n    <button mat-button [mat-dialog-close]=\"btn\" cdkFocusInitial>Yes</button>\n</div>","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    CommonModule\n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    CommonModule\n  ]\n})\nexport class MatModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListComponent } from './components/list/list.component';\n\nconst routes: Routes = [\n  { path: 'lista', component: ListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ItemsService } from 'src/app/services/items.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-form-edit',\n  templateUrl: './form-edit.component.html',\n  styleUrls: ['./form-edit.component.css']\n})\nexport class FormEditComponent implements OnInit {\n  myForm: FormGroup;\n  constructor(public customer: ItemsService, private dialogRef: MatDialogRef<FormEditComponent>, @Inject(MAT_DIALOG_DATA) data) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onSaveForm() {\n    if (this.customer.selected.id == null) {\n      let newItem = {\n        name: this.customer.selected.name,\n        amount: this.customer.selected.amount,\n        price: this.customer.selected.price,\n      }\n      this.customer.add(newItem);\n    } else {\n      this.customer.editItems(this.customer.selected);\n    }\n    this.close();\n  }\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"container\">\n    <mat-form-field>\n        <input matInput placeholder=\"Name\" name=\"name\" [(ngModel)]=\"this.customer.selected.name\" required [ngModelOptions]=\"{standalone: true}\">\n        <mat-error *ngIf=\"null\">\n            Name <strong>requerido</strong>\n        </mat-error>\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput placeholder=\"Amount\" name=\"amount\" [(ngModel)]=\"this.customer.selected.amount\">\n    </mat-form-field>\n    <mat-form-field>\n        <input matInput placeholder=\"Price\" name=\"price\" [(ngModel)]=\"this.customer.selected.price\">\n    </mat-form-field>\n    <button mat-flat-button color=\"primary\" (click)=\"onSaveForm()\">\n         <mat-icon>save</mat-icon> save\n    </button>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}